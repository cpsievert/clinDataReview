% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filterData.R
\name{filterData}
\alias{filterData}
\title{Filter dataset based on specified filters.}
\usage{
filterData(
  data,
  filters,
  keepNA = TRUE,
  returnAll = FALSE,
  verbose = FALSE,
  labelVars = NULL,
  labelData = "data"
)
}
\arguments{
\item{data}{Data.frame with data.}

\item{filters}{Unique filter or list of filters.
Each filter should be a list containing:
\itemize{
\item{'var': }{String with variable from \code{data} to filter on.}
\item{'value': }{Character vector with values from \code{var} to consider.}
\item{'valueFct': }{Function to be applied on \code{var} to extract value to consider}
\item{'op': }{(optional) String with operator used to retain records from \code{value}.
If not specified, the inclusion operator: '\%in\%' is considered, a.k.a
records with \code{var} in \code{value} are retained.}
\item{'rev': }{(optional) Logical, if TRUE (FALSE by default), records with \code{var} NOT  are retained.}
\item{'keepNA': }{(optional) Logical, if TRUE (by default), missing values in \code{var}
are retained. If not specified, \code{keepNA} general parameter is used.}
\item{'varsBy': }{(optional) Character vector with variables in \code{data} containing groups to filter by}
\item{'varNew': }{(optional) String with name for the new variable created}
\item{'labelNew': }{(optional) String with label for \code{varNew}}
}
If a list of filters is specified, the logical operator (see \code{\link[base]{Logic}})
linking the different conditions
can be specified between the two conditions, e.g.: 
\code{list(list(var = "SEX", value = "F"), "&", list(var = "COUNTRY", value = "DEU"))}.}

\item{keepNA}{Logical, if TRUE (by default) missing values in \code{var} are retained.
If set to FALSE, missing values are ignored for all filters.
The specification within \code{filters} prevails on this parameter.}

\item{returnAll}{Logical:
\itemize{
\item{if FALSE (by default): }{the \code{data} for only the filtered records
is returned.}
\item{if TRUE: }{the full \code{data} is returned, with the extra column: 'keep',
containing 'TRUE' if the record fulfill all conditions, FALSE otherwise}
}}

\item{verbose}{Logical, if TRUE (FALSE by default) progress messages are printed
in the current console.
For the visualizations, progress messages during download
of subject-specific report are displayed in the browser console.}

\item{labelVars}{Named character vector containing variable labels,
used by default for all labels in the plot.}

\item{labelData}{(optional) String with label for input \code{data},
that will be included in progress messages.}
}
\value{
Filtered \code{data} if \code{returnAll} is FALSE (by default).
Otherwise \code{data} with additional column: \code{keep},
containing TRUE for records which fullfill the specified
condition(s) or FALSE otherwise.
The data contains also any new variable(s) 
(\code{varNew}) specified in the \code{filters}.
}
\description{
A dataset can be filtered:
\itemize{
\item{based on:
\itemize{
\item{specified for a variable: \code{value} parameter)}
\item{on a function of the variable (\code{valueFct} parameter), 
e.g. maximum of the variable)}
}
}
\item{by groups (\code{varsBy} parameter)}
}
**Note that by default, missing values in the filtering variable are retained
(which differs from the default behaviour in R)**.
To filter missing records, please use the \code{keepNA} parameter.
}
\examples{
library(glpgUtilityFct)

data(SDTMDataPelican)

dataDM <- SDTMDataPelican$DM

## single filter

# filter with inclusion criteria:
filterData(
	data = dataDM, 
	filters = list(var = "SEX", value = "M"), 
	verbose = TRUE
)

# filter with non-inclusion criteria
filterData(
	data = dataDM, 
	filters = list(var = "SEX", value = "M", rev = TRUE), 
	verbose = TRUE
)

# filter based on inequality operator
filterData(
	data = dataDM, 
	filters = list(var = "AGE", value = 20, op = "<="), 
	verbose = TRUE
)

# missing values are retained by default!
dataDMNA <- dataDM
dataDMNA[1:2, "AGE"] <- NA
filterData(
	data = dataDMNA, 
	filters = list(var = "AGE", value = 20, op = "<="), 
	verbose = TRUE
)

# filter missing values on variable
filterData(
	data = dataDMNA, 
	filters = list(var = "AGE", value = 20, op = "<=", keepNA = FALSE), 
	verbose = TRUE
)

# retain only missing values
filterData(
	data = dataDMNA, 
	filters = list(var = "AGE", value = NA, keepNA = FALSE), 
	verbose = TRUE
)

## multiple filters

# by default the records fulfilling all conditions are retained ('AND')
filterData(
	data = dataDM, 
	filters = list(
		list(var = "AGE", value = 20, op = "<="),
		list(var = "SEX", value = "M")
	), 
	verbose = TRUE
)

# custom operator:
filterData(
	data = dataDM, 
	filters = list(
		list(var = "AGE", value = 20, op = "<="),
		"|",
		list(var = "SEX", value = "M")
	), 
	verbose = TRUE
)
}
\author{
Laure Cougnaud
}
