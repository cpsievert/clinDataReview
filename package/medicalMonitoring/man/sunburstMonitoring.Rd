% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sunburstMonitoring.R
\name{sunburstMonitoring}
\alias{sunburstMonitoring}
\title{Sunburst interactive plot.}
\usage{
sunburstMonitoring(
  data,
  parentVar,
  parentLab = getLabelVar(parentLab, labelVars = labelVars),
  childVar,
  childLab = getLabelVar(childVar, labelVars = labelVars),
  valueVar,
  valueLab = getLabelVar(valueVar, labelVars = labelVars),
  valueType = "relative",
  titleExtra = NULL,
  title = paste(paste(valueLab, "of", paste(c(parentLab, childLab), collapse = " and "),
    titleExtra), collapse = "<br>"),
  labelVars = NULL,
  width = NULL,
  height = NULL,
  pathVar = NULL,
  table = FALSE,
  tableVars,
  tableLab,
  tableButton = TRUE,
  tablePars = list(),
  id = paste0("plotMonitoring", sample.int(n = 1000, size = 1))
)
}
\arguments{
\item{data}{Data.frame with data.}

\item{parentVar, parentLab}{String with variable of \code{data} containing parent nodes,
and associated label.}

\item{childVar, childLab}{String with variable of \code{data} containing child nodes,
and associated label.}

\item{valueVar, valueLab}{String with variable of \code{data} containing node value,
and associated label.}

\item{valueType}{String with type of values in \code{valueVar}
(\code{branchvalues} of the \code{\link[plotly]{plot_ly}}) function),
among others: 'relative' (default), or 'total' (only if sum(child) <= to parent).}

\item{titleExtra}{String with extra title for the plot (appended after \code{title}).}

\item{title}{String with title for the plot.}

\item{labelVars}{Named character vector containing variable labels,
used by default for all labels in the plot.}

\item{width}{Width/height of the plot in pixels.}

\item{height}{Width/height of the plot in pixels.}

\item{pathVar}{String with variable of \code{data} containing path
to a subject-specific report (e.g. patient profiles).
The report should be unique by element of \code{idVar}.
This report will be:
\itemize{
\item{downloaded if the user clicks on the 'p' (a.k.a 'profile') key
when hovering on a point of the plot}
\item{opened in a brower via hyperlink in the \code{idVar} of the table 
column (if specified via \code{tableVars})}
}}

\item{table}{Logical, if TRUE (FALSE by default)
returns also a \code{datatable} containing the plot data.}

\item{tableVars}{Character vector with variables to be included 
in the table; and associated labels.}

\item{tableLab}{Character vector with variables to be included 
in the table; and associated labels.}

\item{tableButton}{Logical, if TRUE (by default)
the table is included within an HTML button.}

\item{tablePars}{List with parameters passed to the
\code{\link[glpgUtilityFct]{toDTGLPG}} function.}

\item{id}{String with general id for the plot:
\itemize{
\item{'id' is used as \code{group} for the \code{\link[crosstalk]{SharedData}}}
\item{'button:[id]' is used as button ID if \code{table} is TRUE}
}
If not specified, a random id, as 'plotMonitoring[X]' is used.}
}
\value{
If a \code{table} is requested:
\itemize{
\item{a list with the 'plot' (\code{\link[plotly]{plotly}} object) and 'table'
(\code{\link[DT]{datatable}} object with extra class: \code{medicalMonitoringTable})}
\item{\code{\link[plotly]{plotly}} object}
}
}
\description{
Note: the table and plot are not (yet) linked.
}
\examples{
library(glpgUtilityFct)

data(SDTMDataPelican)
data(labelVarsSDTMPelican)

dataLB <- SDTMDataPelican$LB
dataDM <- SDTMDataPelican$DM
dataLB <- annotateData(dataLB, annotations = list(data = dataDM))
labelVars <- labelVarsSDTMPelican

## pairwise comparison plot of two parameters of interest:

# format data long -> wide format (one column per lab param)
dataPlot <- subset(dataLB, LBTESTCD \%in\% c("ALT", "ALB"))
library(reshape2)
dataPlotWide <- dcast(
	data = dataPlot,
	formula = USUBJID + VISIT + VISITNUM ~ LBTESTCD, 
	value.var = "LBSTRESN",
	fun.aggregate = mean
)

# scatterplot per visit
scatterplotMonitoring(
	data = dataPlotWide, 
	xVar = "ALT", yVar = "ALB",
	aesPointVar = list(color = "USUBJID"),
	themePars = list(legend.position = "none"),
	facetPars = list(facets = "VISIT"),
	labelVars = labelVars
)

# scatterplot with all visits, link subjects
scatterplotMonitoring(
	data = dataPlotWide, 
	xVar = "ALT", yVar = "ALB",
	xLab = getLabelParamcd(paramcd = "ALT", data = dataLB, paramcdVar = "LBTESTCD", paramVar = "LBTEST"),
	yLab = getLabelParamcd(paramcd = "ALB", data = dataLB, paramcdVar = "LBTESTCD", paramVar = "LBTEST"),
	aesPointVar = list(color = "VISIT", shape = "VISIT"),
	aesLineVar = list(group = "USUBJID", linetype = "VISIT"),
	labelVars = labelVars
)

# scatterplot of different visits versus baseline

# add baseline as extra column:
dataPlot <- subset(dataLB, LBTESTCD == "ALT")
dataPlotBL <- subset(dataPlot, VISIT == "Screening (D-28 to D-1)")
dataPlotBL <- dataPlotBL[with(dataPlotBL, order(USUBJID, -LBDY)), ]
dataPlotBL <- dataPlotBL[!duplicated(dataPlotBL$USUBJID), ]
dataPlot$LBSTRESNBL <- dataPlot[match(dataPlot$USUBJID, dataPlotBL$USUBJID), "LBSTRESN"]

# sort visits:
dataPlot$VISIT <- with(dataPlot, reorder(VISIT, VISITNUM))

scatterplotMonitoring(
	data = dataPlot, 
	xVar = "LBSTRESNBL", xLab = paste(labelVars["LBSTRESN"], "for last screening visit"),
	yVar = "LBSTRESN", yLab = paste(labelVars["LBSTRESN"], "at visit X"),
	aesPointVar = list(color = "USUBJID"),
	aesLineVar = list(group = "USUBJID", color = "USUBJID"),
	hoverVar = c("USUBJID", "VISIT", "LBDY", "LBSTRESN", "COUNTRY", "ACTARM"),
	labelVars = labelVars,
	facetPars = list(facets = "VISIT"),
	themePars = list(legend.position = "none"),
	title = paste("Comparison of actual value of", 
		getLabelParamcd(paramcd = "ALT", data = dataLB, paramcdVar = "LBTESTCD", paramVar = "LBTEST"),
		"at each visit versus baseline"
	),
	refLinePars = list(
		list(slope = 1, intercept = 0, linetype = 1, color = "black", label = FALSE),
		list(xintercept = "LBSTNRLO", linetype = 2, color = "orange"),
		list(yintercept = "LBSTNRLO", linetype = 2, color = "orange"),
		list(xintercept = "LBSTNRHI", linetype = 2, color = "orange"),
		list(yintercept = "LBSTNRHI", linetype = 2, color = "orange", label = "Reference Range Upper Limit")
	)
)

}
\author{
Laure Cougnaud
}
