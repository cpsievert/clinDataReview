% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sunburstMonitoring.R
\name{sunburstMonitoring}
\alias{sunburstMonitoring}
\title{Sunburst interactive plot.}
\usage{
sunburstMonitoring(
  data,
  parentVar,
  parentLab = getLabelVar(parentVar, labelVars = labelVars),
  childVar,
  childLab = getLabelVar(childVar, labelVars = labelVars),
  valueVar,
  valueLab = getLabelVar(valueVar, labelVars = labelVars),
  valueType = "relative",
  titleExtra = NULL,
  title = paste(paste(valueLab, "by", paste(c(parentLab, childLab), collapse = " and "),
    titleExtra), collapse = "<br>"),
  labelVars = NULL,
  width = NULL,
  height = NULL,
  pathVar = NULL,
  pathLab = getLabelVar(pathVar, labelVars = labelVars),
  hoverVar = childVar,
  hoverLab = getLabelVar(hoverVar, labelVars = labelVars),
  table = FALSE,
  tableVars,
  tableLab,
  tableButton = TRUE,
  tablePars = list(),
  id = paste0("plotMonitoring", sample.int(n = 1000, size = 1)),
  verbose = FALSE
)
}
\arguments{
\item{data}{Data.frame with data.}

\item{parentVar, parentLab}{String with variable of \code{data} containing parent nodes,
and associated label.}

\item{childVar, childLab}{String with variable of \code{data} containing child nodes,
and associated label.}

\item{valueVar, valueLab}{String with variable of \code{data} containing node value,
and associated label.}

\item{valueType}{String with type of values in \code{valueVar}
(\code{branchvalues} of the \code{\link[plotly]{plot_ly}}) function),
among others: 'relative' (default), or 'total' (only if sum(child) <= to parent).}

\item{titleExtra}{String with extra title for the plot (appended after \code{title}).}

\item{title}{String with title for the plot.}

\item{labelVars}{Named character vector containing variable labels,
used by default for all labels in the plot.}

\item{width}{Width/height of the plot in pixels.}

\item{height}{Width/height of the plot in pixels.}

\item{pathVar}{String with variable of \code{data} containing:
\itemize{
\item{visualization of individual profiles 
(\code{\link{scatterplotMonitoring}}) :}{
path to the report. The report should be unique 
for each element of \code{idVar}.
}
\item{visualization of summary statistics 
(\code{\link{sunburstMonitoring}}), \code{\link{treemapMonitoring}},
\code{\link{barplotMonitoring}}) :}{path or hyperlinks 
with path to the report. If multiple, they should be separated by: ', '.
}
}
The report(s) will be:
\itemize{
\item{downloaded or opened in the browser if the user clicks on the 'p' (a.k.a 'profile') key
when hovering on a point of the plot}
\item{downloaded or opened in the browser via hyperlink in the table}
}}

\item{pathLab}{String with label for \code{pathVar},
used for the label of the collapsible row
(only displayed if \code{pathExpand} is TRUE).}

\item{hoverVar}{Character vector with variables to be displayed in the hover,
by default \code{xVar}, \code{yVar} and any aesthetic variables.}

\item{hoverLab}{Named character vector with labels for \code{hoverVar}.}

\item{table}{Logical, if TRUE (FALSE by default)
returns also a \code{datatable} containing the plot data.}

\item{tableVars}{Character vector with variables to be included 
in the table; and associated labels.}

\item{tableLab}{Character vector with variables to be included 
in the table; and associated labels.}

\item{tableButton}{Logical, if TRUE (by default)
the table is included within an HTML button.}

\item{tablePars}{List with parameters passed to the
\code{\link[glpgUtilityFct]{toDTGLPG}} function.}

\item{id}{String with general id for the plot:
\itemize{
\item{'id' is used as \code{group} for the \code{\link[crosstalk]{SharedData}}}
\item{'button:[id]' is used as button ID if \code{table} is TRUE}
}
If not specified, a random id, as 'plotMonitoring[X]' is used.}
}
\value{
If a \code{table} is requested:
\itemize{
\item{a list with the 'plot' (\code{\link[plotly]{plotly}} object) and 'table'
(\code{\link[DT]{datatable}} object with extra class: \code{medicalMonitoringTable})}
\item{\code{\link[plotly]{plotly}} object}
}
}
\description{
Note: the table and plot are not (yet) linked.
}
\examples{
library(glpgUtilityFct)

data(SDTMDataPelican)
data(labelVarsSDTMPelican)

dataAE <- SDTMDataPelican$AE
dataDM <- SDTMDataPelican$DM
labelVars <- labelVarsSDTMPelican

## example of basic sunburst:

# sunburst takes as input table with counts
library(inTextSummaryTable)

# total counts: Safety Analysis Set (patients with start date for the first treatment)
dataTotal <- subset(dataDM, RFXSTDTC != "")

# compute adverse event table
tableAE <- getSummaryStatisticsTable(
		
	data = dataAE,
	rowVar = c("AESOC", "AEDECOD"),
	dataTotal = dataTotal,
	rowOrder = "total",
	labelVars = labelVars,
	stats = getStats("count"),
	
	# plotly treemap requires records (rows) for each group
	rowVarTotalInclude = "AEDECOD",
	outputType = "data.frame"

)

dataSunburst <- tableAE

dataSunburst$n <- as.numeric(dataSunburst$n)

# reformat summary statistics data.frame to link child <-> parent node
dataSunburst['parent'] = with(dataSunburst, 
	ifelse(AEDECOD == "Total", 'Adverse events', as.character(AESOC))
)
dataSunburst['child'] = with(dataSunburst, 
	ifelse(AEDECOD == "Total", as.character(AESOC), as.character(AEDECOD))
)

# create plot
sunburstMonitoring(
	data = dataSunburst,
	parentVar = "parent", parentLab = getLabelVar(var = "AESOC", labelVars = labelVars),
	childVar = "child", childLab = getLabelVar(var = "AEDECOD", labelVars = labelVars),
	valueVar = "n", valueLab = "Number of patients with adverse events"
)

## example where sum(counts) of child = counts of parent

# counts of patients per country/site
tableDM <- getSummaryStatisticsTable(
	data = dataDM,
	rowVar = c("COUNTRY", "SITEID"),
	labelVars = labelVars,
	# plotly treemap requires records (rows) for each group
	rowVarTotalInclude = "SITEID",
	rowTotalInclude = TRUE,
	outputType = "data.frame"
)

# reformat summary statistics data.frame to link child <-> parent node
tableDM['parent'] = with(tableDM, 
	ifelse(SITEID == "Total", 'All', as.character(COUNTRY))
)
tableDM['child'] = with(tableDM, 
	ifelse(SITEID == "Total", as.character(COUNTRY), as.character(SITEID))
)
tableDM$statN <- as.numeric(tableDM$statN)

# create the plot
sunburstMonitoring(
	data = tableDM,
	parentVar = "parent", parentLab = "country",
	childVar = "child", childLab = "side identifier",
	valueVar = "statN", valueLab = "Counts of patients",
	valueType = "total",
)
}
\author{
Laure Cougnaud
}
